class Category {
  final String image;
  final String label;
  Category({required this.image, required this.label});
  factory Category.fromJson(Map<String, dynamic> json) {
    return Category(image: json['image'], label: json['label']);
  }
  toJson() {
    return {'image': image, 'label': label};
  }
}

````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
.........................................................................................................................................................................................
readStorage() async {
    final shared = await SharedPreferences.getInstance();
    final usersList = shared.getStringList('key');
    setState(() {
      userList = usersList
              ?.map((user) => Student.fromJson(jsonDecode(user)))
              .toList() ??
          [];.
    });
  }

````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
...........................................................................................................................................................................................
  saveToStorage() async {
    final shared = await SharedPreferences.getInstance();
    final studentsList =
        listStudent.map((user) => jsonEncode(user.toJson())).toList();
    await shared.setStringList('key', studentsList);
  }
